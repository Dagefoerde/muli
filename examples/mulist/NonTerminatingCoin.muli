package mulist;

import java.util.stream.Stream;
import de.wwu.muli.*;
import de.wwu.muli.solution.*;

public class NonTerminatingCoin {

  public static void main(String[] args) {
    new NonTerminatingCoin();
  }

  public NonTerminatingCoin() {
    // This program does not find any solution using DFS, but does so using BFS.
    Stream<Solution<Object>> solutions = Muli.muli(NonTerminatingCoin::nonTerminatingCoin, SearchStrategy.IterativeDeepening);

    //System.out.println(solutions.findFirst().get().value);
    // Before executing the following: Ensure that de.wwu.muli.env.nativeimpl.SolutionIterator#abortAfter1Second is true! Then watch the output.
    System.out.println(solutions.count());
  }

  private static boolean nonTerminatingCoin() {
    int coin free;
    
    if (coin == 0) {
        return true;
    } else {
        return nonTerminatingCoin();
    }
  }

}
